fs.file-max = 1024000
# 系统所有进程一共可以打开的句柄数(bytes)
kernel.msgmnb = 65536
# 进程通讯消息队列的最大字节数(bytes)
kernel.msgmax = 65536
# 进程通讯消息队列单条数据最大的长度(bytes)
kernel.shmmax = 68719476736
# 内核允许的最大共享内存大小(bytes)
kernel.shmall = 4294967296
#任意时间内系统可以使用的共享内存总量(bytes)

net.core.default_qdisc = fq
# 将网络拥塞队列算法设置为性能和延迟最佳的fq_codel
net.ipv4.tcp_congestion_control = bbr
# 开启系统级别的网络拥塞控制
net.ipv4.ip_forward=1
# 开启系统级别的路由转发
net.ipv4.neigh.default.gc_stale_time = 120
# 当路由表中的邻居记录超过这个时间没有被访问时，它会被删除
net.ipv4.conf.all.accept_source_route = 1
# 允许接收来自外部的源路由信息
net.ipv4.conf.default.accept_source_route = 1
# 允许接收IPv4环境下带有路由信息的数据包，保证安全性
net.ipv4.conf.all.accept_redirects = 0
# 关闭所有接受的ICMP重定向报文
net.ipv4.conf.default.accept_redirects = 0
# 拒绝接收来自IPv4的ICMP重定向消息，保证安全性
net.ipv4.conf.all.send_redirects = 0
# 关闭所有发送的ICMP重定向报文
net.ipv4.conf.default.send_redirects = 0
# 拒绝发送ICMP重定向消息，保证安全性
net.ipv4.conf.lo.send_redirects = 0
# 禁止发送在IPv4下的ICMP重定向消息, 保证安全性
net.ipv4.conf.all.rp_filter = 0
# 关闭所有接受的数据包的过滤功能
net.ipv4.conf.default.rp_filter = 0
# 关闭所有接受的数据包的过滤功能
net.ipv4.conf.lo.rp_filter = 0
# 关闭反向路径回溯进行源地址验证(RFC1812)，提高性能
net.ipv4.icmp_echo_ignore_broadcasts = 1
# 忽略所有ICMP ECHO请求的广播，保证安全性
net.ipv4.icmp_echo_ignore_broadcasts = 1
# 忽略所有ICMP ECHO请求的广播，保证安全性
net.ipv4.icmp_ignore_bogus_error_responses = 1
# 忽略所有错误的ICMP回应，保证安全性
net.ipv4.conf.default.arp_announce = 2
net.ipv4.conf.lo.arp_announce = 2
net.ipv4.conf.all.arp_announce = 2
# 开启ARP请求的广播，保证安全性
net.ipv4.tcp_max_tw_buckets = 5000
# 在系统中保存的最大 TCP 队列长度，默认为5000
net.ipv4.tcp_syncookies = 1
# 开启TCP SYN Cookie 的功能，默认为0，表示关闭该功能
net.ipv4.tcp_mtu_probing = 1
# 开启MTU探测，用于支持IPv4的正常访问
net.ipv4.tcp_max_syn_backlog = 8192
# 允许系统中保存的最大TCP连接数，默认为1024
net.ipv4.tcp_synack_retries = 2
# 允许TCP连接中的SYNACK重试次数，默认为2
net.ipv4.tcp_fin_timeout = 30
# 允许TCP连接在释放前等待的最长时间，默认为30s
net.ipv4.tcp_keepalive_time = 1200
# 设置TCP连接的活动时间，默认为7200s，即2小时
net.ipv4.tcp_fastopen = 3
# 开启TCP Fast Open，保证性能
net.ipv4.tcp_no_metrics_save = 1
# 禁止保存TCP连接的统计信息，保证性能
net.ipv4.tcp_max_orphans = 262144
# 允许系统中保存的最大TCP orphan连接数，默认为8192
net.ipv4.tcp_rmem = 4096 87380 4194304
# 设置TCP Socket接收长度的最小值，预留值，最大值(bytes)
net.ipv4.tcp_wmem = 4096 65536 4194304
# 设置TCP Socket发送长度的最小值，预留值，最大值(bytes)
net.core.somaxconn = 262144
# 设置系统中允许的最大TCP连接数，默认为1024
net.core.rmem_default = 8388608
# 设置TCP Socket接收长度的默认值，预留值，最大值(bytes)
net.core.wmem_default = 8388608
# 设置TCP Socket发送长度的默认值，预留值，最大值(bytes)
net.core.rmem_max = 16777216
# 设置TCP Socket接收长度的最大值，预留值，最大值(bytes)
net.core.wmem_max = 16777216
# 设置TCP Socket发送长度的最大值，预留值，最大值(bytes)
net.core.netdev_max_backlog = 262144
# 设置系统中允许的最大TCP连接数，默认为1024

net.ipv6.conf.all.accept_source_route = 1
# 允许接收来自路由的源路由信息，默认为0，表示禁止
net.ipv6.conf.default.accept_source_route = 1
# 允许接收来自路由的源路由信息，默认为0，表示禁止
net.ipv6.conf.all.accept_redirects = 0
# 允许接收来自路由的路由重定向信息，默认为1，表示禁止
net.ipv6.conf.default.accept_redirects = 0
# 允许接收来自路由的路由重定向信息，默认为1，表示禁止
net.ipv6.conf.all.autoconf = 1
# 允许自动配置，默认为1，表示禁止
net.ipv6.conf.all.forwarding = 1
# 允许路由转发，默认为0，表示禁止
